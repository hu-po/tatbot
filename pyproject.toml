[project.urls]
homepage = "https://github.com/hu-po/tatbot"
issues = "https://github.com/hu-po/tatbot/issues"
discord = "https://discord.gg/pPAFwndTJd"

[project]
name = "tatbot"
version = "0.5.0"
description="tattoo robot"
authors = [
    { name = "Hugo Ponte", email = "hu.po.xyz@gmail.com" },
]
license = "MIT"
readme = "README.md"
requires-python = "==3.11.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Operating System :: POSIX :: Linux",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing",
]
dependencies = [
    "pyroki @ git+https://github.com/chungmin99/pyroki.git@main#egg=pyroki",
    "pyyaml==6.0.2",
    "safetensors==0.5.3",
    "tyro==0.9.24",
]

[project.optional-dependencies]
dev = [
    "isort",
    "ruff",
]
bot = [
    "lerobot[tatbot,intelrealsense,smolvla] @ git+https://github.com/hu-po/lerobot.git@main",
    "pyrealsense2==2.55.1.6486",
    "trossen-arm==1.8.3",
    "evdev==1.9.2",
]
gen = [
    "jax[cuda12]>=0.4.0,<0.5.0",
    "jaxtyping>=0.2.25,<1.0.0",
    "jaxlie>=1.3.4,<2.0.0",
    "replicate==1.0.7",
    "svgpathtools==1.7.1",
]
map = [
    "polyscope==2.4.0",
    "potpourri3d==1.3",
]
net = [
    "paramiko==3.5.1",
    "mcp[cli]==1.9.4",
]
tag = [
    "ffmpeg-python==0.2.0",
    "pupil-apriltags==1.0.4.post11",
]
viz = [
    "opencv-python==4.11.0.86",
    "Pillow>=9.0.0,<11.0.0",
    "viser==1.0.0",
    "pyliblzfse>=0.4.1",
]
vla = [
    "lerobot[tatbot,smolvla] @ git+https://github.com/hu-po/lerobot.git@main",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["bot", "data", "gen", "map", "net", "tag", "utils", "viz"]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.isort]
profile = "black"
line_length = 88

[tool.ruff]
line-length = 120
# Read more here https://beta.ruff.rs/docs/rules/
# By default, Ruff enables Flake8's E and F rules
# Pyflakes - F, pycodestyle - E, W
# flake8-builtins - A
# Pylint - PLC, PLE, PLW
# isort - I
select = ['E', 'F', 'W', 'A', 'PLC', 'PLE', 'PLW', 'I']