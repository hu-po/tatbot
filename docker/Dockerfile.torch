# Base: CUDA 12.1 runtime on Ubuntu 22.04 with cuDNN
FROM nvidia/cuda:12.1.1-cudnn8-runtime-ubuntu22.04

ARG DEBIAN_FRONTEND=noninteractive

# System deps and Python 3.11
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        software-properties-common \
        ca-certificates \
        git \
        curl \
        build-essential \
        ffmpeg \
        libgl1 \
        libglib2.0-0 \
        pkg-config \
        && add-apt-repository ppa:deadsnakes/ppa -y && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        python3.11 \
        python3.11-venv \
        python3.11-dev \
        python3-pip \
        && rm -rf /var/lib/apt/lists/*

# Ensure pip is recent and install uv (fast pip wrapper used by repo)
RUN python3.11 -m pip install --upgrade pip setuptools wheel uv

ENV PYTHON=python3.11 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    UV_SYSTEM_PYTHON=1 \
    UV_LINK_MODE=copy \
    PYTHONUNBUFFERED=1 \
    HYDRA_FULL_ERROR=1

WORKDIR /workspace/tatbot

# Copy only files needed to resolve/install deps first (better layer caching)
COPY pyproject.toml uv.lock ./
COPY src ./src
COPY config ./config
COPY scripts ./scripts

# Install project deps that are safe for Torch container (no JAX)
RUN uv pip install --system --no-cache-dir .[gen,img,viz]

# Install PyTorch + torchvision + torchaudio CUDA 12.1 wheels
RUN uv pip install --system --no-cache-dir \
      --index-url https://download.pytorch.org/whl/cu121 \
      "torch==2.4.*" "torchvision==0.19.*" "torchaudio==2.4.*"

# Optional: Install VGGT from source (heavy). Uncomment to enable.
# RUN uv pip install --system --no-cache-dir \
#       "vggt @ git+https://github.com/facebookresearch/VGGT.git@main"

# Default shell
CMD ["bash"]
