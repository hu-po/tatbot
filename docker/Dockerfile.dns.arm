# Intended for rpi2 compute node
# Runs dnsmasq DNS server for the local tatbot network
FROM arm64v8/debian:bookworm-slim
# build argument for rpi number (1 or 2)
ENV RPI=${RPI}
RUN apt-get update && apt-get install -y \
    dnsmasq \
    && rm -rf /var/lib/apt/lists/*
# Copy the networking config files
COPY config/networking/dnsmasq.conf /etc/dnsmasq.conf
RUN mkdir -p /etc/dnsmasq_hosts
COPY config/networking/hosts.conf /etc/dnsmasq_hosts/hosts.conf
# Ensure log file exists and has correct permissions for the 'dnsmasq' user
RUN mkdir -p /var/log && \
    touch /var/log/dnsmasq.log && \
    chown dnsmasq:nogroup /var/log/dnsmasq.log
# Note: 'dnsmasq' user/group might differ slightly based on exact Debian version,
# 'nogroup' or 'dnsmasq' group are common defaults. Check if needed.
# Expose standard DNS ports
EXPOSE 53/udp
EXPOSE 53/tcp
# Entrypoint script to run dnsmasq in the foreground
RUN echo '#!/bin/bash' > /root/entrypoint.sh && \
    echo '# Start dnsmasq' >> /root/entrypoint.sh && \
    echo '# -C specifies the config file' >> /root/entrypoint.sh && \
    echo '# -k keeps it in the foreground for Docker' >> /root/entrypoint.sh && \
    echo '# Logs will go to file specified in conf or syslog/stderr based on conf' >> /root/entrypoint.sh && \
    echo 'echo "Starting dnsmasq..."' >> /root/entrypoint.sh && \
    echo 'exec dnsmasq -C /etc/dnsmasq.conf -k' >> /root/entrypoint.sh
RUN chmod +x /root/entrypoint.sh
ENTRYPOINT ["/bin/bash", "/root/entrypoint.sh"]