# https://catalog.ngc.nvidia.com/orgs/nvidia/teams/ai-workbench/containers/python-cuda122/tags
FROM nvcr.io/nvidia/ai-workbench/python-cuda122:1.0.6
ENV ACCEPT_EULA="Y"
ENV PYTHON_VERSION=3.11
ENV BACKEND="x86-3090"
ENV DEVICE="cuda"
ENV NUM_ENVS=16
ENV TATBOT_ROOT=/root/tatbot
ENV DOCKERFILE_UV_VENV=$TATBOT_ROOT/.venv
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility,graphics
COPY --from=ghcr.io/astral-sh/uv:0.5.1 /uv /uvx /bin/
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    git \
    build-essential \
    clang \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*
WORKDIR $TATBOT_ROOT
RUN mkdir -p $TATBOT_ROOT/tatbot/morphs \
    $TATBOT_ROOT/tatbot/src \
    $TATBOT_ROOT/data \
    $TATBOT_ROOT/output \
    $TATBOT_ROOT/assets \
    $TATBOT_ROOT/.venv
RUN git clone https://github.com/TrossenRobotics/trossen_arm_description.git $TATBOT_ROOT/assets/trossen_arm_description
RUN uv venv --python $PYTHON_VERSION $DOCKERFILE_UV_VENV
COPY docker/ik/requirements.$BACKEND.txt $TATBOT_ROOT/requirements.$BACKEND.txt
RUN . $DOCKERFILE_UV_VENV/bin/activate && uv pip install -r requirements.$BACKEND.txt
COPY pyproject.toml $TATBOT_ROOT/pyproject.toml
COPY tatbot/ $TATBOT_ROOT/tatbot/
RUN . $DOCKERFILE_UV_VENV/bin/activate && uv pip install -e .[dev]
COPY scripts/util/validate_backend.sh $TATBOT_ROOT/scripts/util/validate_backend.sh
COPY scripts/util/specs.sh $TATBOT_ROOT/scripts/util/specs.sh
COPY .env $TATBOT_ROOT/.env